version: "3.7"

services:

  candlestick:
    build:
      context: .
      dockerfile: build/Dockerfile
    image: candlestick_app
    container_name: candlestick
    env_file:
      - .env
    environment:
      HISTFILE: /root/hist/.app_bash_history
      REPOSITORY_TYPE: postgres
      REPOSITORY_POSTGRES_DB_URL: postgresql+psycopg2://postgres:password@postgres/candlestick
    volumes:
      - ./src:/app/src
    depends_on:
      - postgres
    ports:
      - "8081:8081"
    restart: always
    networks:
      - candlestick

  instrument-consumer:
    image: candlestick_app
    container_name: instrument_consumer
    command: bash -c "candlestick-cli subscribe-instrument-stream"
    env_file:
      - .env
    environment:
      HISTFILE: /root/hist/.app_bash_history
      REPOSITORY_TYPE: postgres
      REPOSITORY_POSTGRES_DB_URL: postgresql+psycopg2://postgres:password@postgres/candlestick
    depends_on:
      - postgres
    ports:
      - "8082:8081"
    restart: always
    networks:
      - candlestick

  quote-consumer:
    image: candlestick_app
    container_name: quote_consumer
    command: bash -c "candlestick-cli subscribe-quote-stream"
    env_file:
      - .env
    environment:
      HISTFILE: /root/hist/.app_bash_history
      REPOSITORY_TYPE: postgres
      REPOSITORY_POSTGRES_DB_URL: postgresql+psycopg2://postgres:password@postgres/candlestick
    depends_on:
      - instrument-consumer
      - postgres
    ports:
      - "8083:8081"
    restart: always
    networks:
      - candlestick

  postgres:
    container_name: postgres
    build:
      context: .
      dockerfile: build/Dockerfile.postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "--dbname=candlestick" ]
      timeout: 20s
      retries: 10
    networks:
      - candlestick

networks:
  candlestick:
    driver: bridge
    external: True
